
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Objects;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author boskopajkic
 */
public class AdminManageDepartments extends javax.swing.JFrame {

    /**
     * Creates new form AdminManageDepartments
     */
    public AdminManageDepartments() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        DepartmentIDTextField = new javax.swing.JTextField();
        SearchDepartmentButton = new javax.swing.JButton();
        DepartmentNameLabel = new javax.swing.JLabel();
        NumberOfEmployeesLabel = new javax.swing.JLabel();
        DepartmentNameTextField = new javax.swing.JTextField();
        NumberOfEmployeesTextField = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        CreateNewButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Department ID:");

        SearchDepartmentButton.setText("Search");
        SearchDepartmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchDepartmentButtonActionPerformed(evt);
            }
        });

        DepartmentNameLabel.setText("Department Name");

        NumberOfEmployeesLabel.setText("Number of Employees");

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setText("Manage Departments");

        CreateNewButton.setText("Create New");
        CreateNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateNewButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(NumberOfEmployeesLabel)
                            .addComponent(DepartmentNameLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SaveButton)
                                .addGap(18, 18, 18)
                                .addComponent(DeleteButton)
                                .addGap(18, 18, 18)
                                .addComponent(CreateNewButton)
                                .addGap(0, 62, Short.MAX_VALUE))
                            .addComponent(DepartmentNameTextField)
                            .addComponent(NumberOfEmployeesTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DepartmentIDTextField)
                                .addGap(18, 18, 18)
                                .addComponent(SearchDepartmentButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackButton)
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DepartmentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchDepartmentButton)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DepartmentNameLabel)
                    .addComponent(DepartmentNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberOfEmployeesLabel)
                    .addComponent(NumberOfEmployeesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveButton)
                    .addComponent(DeleteButton)
                    .addComponent(CreateNewButton))
                .addContainerGap(239, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        PayrollAdminHomePage payrollScreen = new PayrollAdminHomePage();
        payrollScreen.show();

        dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // Code thats run when initally Opened
        
        DepartmentNameLabel.setVisible(false);
        DepartmentNameTextField.setVisible(false);
        NumberOfEmployeesLabel.setVisible(false);
        NumberOfEmployeesTextField.setVisible(false);
        SaveButton.setVisible(false);
        CreateNewButton.setVisible(false);
        DeleteButton.setVisible(false);
        
        
    }//GEN-LAST:event_formWindowOpened

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO add your handling code here:
        
        int departmentID = Integer.parseInt(DepartmentIDTextField.getText());
        String departmentName = DepartmentNameTextField.getText();
        int numOfEmployees = Integer.parseInt(NumberOfEmployeesTextField.getText());
        
        String updateQuery = "UPDATE DEPARTMENT SET NAME = ?, NUMBER_OF_EMPLOYEES = ? WHERE DEPARTMENT_ID = ?";
        try (var preparedStatement = MainClass.connection.prepareStatement(updateQuery)) {
            preparedStatement.setString(1, departmentName);
            preparedStatement.setInt(2, numOfEmployees);
            preparedStatement.setInt(3, departmentID);

            int rowsUpdated = preparedStatement.executeUpdate();
            if (rowsUpdated > 0) {
                System.out.println("Department updated successfully.");
                JOptionPane.showMessageDialog(null, "Department updated successfully.");
            } else {
                System.out.println("Error: Department not updated.");
                JOptionPane.showMessageDialog(null, "Error: Department not updated.");
            }
        } catch (SQLException ex) {
            System.out.print("Failed to Execute Statement: ");
            System.out.println(ex.getErrorCode());
            ex.printStackTrace();
        }
        
        DepartmentIDTextField.setEditable(true);
        DepartmentNameLabel.setVisible(false);
        DepartmentNameTextField.setVisible(false);
        NumberOfEmployeesLabel.setVisible(false);
        NumberOfEmployeesTextField.setVisible(false);
        SaveButton.setVisible(false);
        CreateNewButton.setVisible(false);
        DeleteButton.setVisible(false);
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        
        
        int departmentID = Integer.parseInt(DepartmentIDTextField.getText());
        String departmentName = DepartmentNameTextField.getText();
        int numOfEmployees = Integer.parseInt(NumberOfEmployeesTextField.getText());
        
        String updateQuery = "DELETE FROM DEPARTMENT WHERE DEPARTMENT_ID = ?";
        try (var preparedStatement = MainClass.connection.prepareStatement(updateQuery)) {
            preparedStatement.setInt(1, departmentID);

            int rowsUpdated = preparedStatement.executeUpdate();
            if (rowsUpdated > 0) {
                System.out.println("Department deleted successfully.");
                JOptionPane.showMessageDialog(null, "Department deleted successfully.");
            } else {
                System.out.println("Error: Department not deleted.");
                JOptionPane.showMessageDialog(null, "Error: Department not deleted.");
            }
        } catch (SQLException ex) {
            System.out.print("Failed to Execute Statement: ");
            System.out.println(ex.getErrorCode());
            ex.printStackTrace();
        }
        
        DepartmentIDTextField.setEditable(true);
        DepartmentNameLabel.setVisible(false);
        DepartmentNameTextField.setVisible(false);
        NumberOfEmployeesLabel.setVisible(false);
        NumberOfEmployeesTextField.setVisible(false);
        SaveButton.setVisible(false);
        CreateNewButton.setVisible(false);
        DeleteButton.setVisible(false);
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void CreateNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateNewButtonActionPerformed
        // TODO add your handling code here:
        
        int departmentID = Integer.parseInt(DepartmentIDTextField.getText());
        String departmentName = DepartmentNameTextField.getText();
        int numOfEmployees = Integer.parseInt(NumberOfEmployeesTextField.getText());
        
        String updateQuery = "INSERT INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (?, ?, ?)";
        try (var preparedStatement = MainClass.connection.prepareStatement(updateQuery)) {
            preparedStatement.setInt(1, departmentID);
            preparedStatement.setString(2, departmentName);
            preparedStatement.setInt(3, numOfEmployees);

            int rowsUpdated = preparedStatement.executeUpdate();
            if (rowsUpdated > 0) {
                System.out.println("Department created successfully.");
                JOptionPane.showMessageDialog(null, "Department created successfully.");
            } else {
                System.out.println("Error: Department record not created.");
                JOptionPane.showMessageDialog(null, "Error: Department not created.");
            }
        } catch (SQLException ex) {
            System.out.print("Failed to Execute Statement: ");
            System.out.println(ex.getErrorCode());
            ex.printStackTrace();
        }
        
        
        DepartmentIDTextField.setEditable(true);
        DepartmentNameLabel.setVisible(false);
        DepartmentNameTextField.setVisible(false);
        NumberOfEmployeesLabel.setVisible(false);
        NumberOfEmployeesTextField.setVisible(false);
        SaveButton.setVisible(false);
        CreateNewButton.setVisible(false);
        DeleteButton.setVisible(false);
    }//GEN-LAST:event_CreateNewButtonActionPerformed

    private void SearchDepartmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchDepartmentButtonActionPerformed
        // TODO add your handling code here:
        
        int DeptID = Integer.parseInt(DepartmentIDTextField.getText());
        boolean found = false;
        
        try {
            Statement stmt = MainClass.connection.createStatement();
            ResultSet rs = stmt.executeQuery("select * from DEPARTMENT WHERE DEPARTMENT_ID = " + DeptID);
            if (rs != null) {
                while (rs.next()) {
                    System.out.println("Department Found: " + rs.getString("NAME"));
                    found = true;
                    DepartmentNameTextField.setText(String.valueOf(rs.getString("NAME")));
                    NumberOfEmployeesTextField.setText(String.valueOf(rs.getInt("NUMBER_OF_EMPLOYEES")));
                    
                }
            } else {
                System.out.println("No Department Found");
                
            }
        } catch (SQLException e) {
            System.out.print("Failed to Execute Statement: ");
            System.out.println(e.getErrorCode());
            e.printStackTrace();
        }
        
        DepartmentNameTextField.setText("");
        NumberOfEmployeesTextField.setText("");
        DepartmentNameLabel.setVisible(true);
        DepartmentNameTextField.setVisible(true);
        NumberOfEmployeesLabel.setVisible(true);
        NumberOfEmployeesTextField.setVisible(true);
        
        if (found) {
            SaveButton.setVisible(true);
            DeleteButton.setVisible(true);
            DepartmentIDTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, "Department found successfully.");
        } else {
            CreateNewButton.setVisible(true);
            DepartmentIDTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, "Department not found. Create new Department?");
        }
        
        
        
    }//GEN-LAST:event_SearchDepartmentButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminManageDepartments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminManageDepartments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminManageDepartments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminManageDepartments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminManageDepartments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton CreateNewButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTextField DepartmentIDTextField;
    private javax.swing.JLabel DepartmentNameLabel;
    private javax.swing.JTextField DepartmentNameTextField;
    private javax.swing.JLabel NumberOfEmployeesLabel;
    private javax.swing.JTextField NumberOfEmployeesTextField;
    private javax.swing.JButton SaveButton;
    private javax.swing.JButton SearchDepartmentButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
