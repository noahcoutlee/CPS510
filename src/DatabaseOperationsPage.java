
import java.sql.*;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author noahc
 */
public class DatabaseOperationsPage extends javax.swing.JFrame {

    /**
     * Creates new form DatabaseOperationsPage
     */
    public DatabaseOperationsPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackButton = new javax.swing.JButton();
        TitleLabel = new javax.swing.JLabel();
        DropTablesButton = new javax.swing.JButton();
        CreateTablesButton = new javax.swing.JButton();
        PopulateTablesButton = new javax.swing.JButton();
        QueryTablesButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(500, 500));
        setSize(new java.awt.Dimension(500, 500));

        BackButton.setText("Go Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        TitleLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        TitleLabel.setText("Database Operations (DANGER)");

        DropTablesButton.setText("Drop Tables");
        DropTablesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropTablesButtonActionPerformed(evt);
            }
        });

        CreateTablesButton.setText("Create Tables");
        CreateTablesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateTablesButtonActionPerformed(evt);
            }
        });

        PopulateTablesButton.setText("Populate Tables");
        PopulateTablesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopulateTablesButtonActionPerformed(evt);
            }
        });

        QueryTablesButton.setText("Query Tables");
        QueryTablesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QueryTablesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(TitleLabel)
                .addGap(0, 108, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BackButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DropTablesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CreateTablesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PopulateTablesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(QueryTablesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackButton)
                .addGap(18, 18, 18)
                .addComponent(TitleLabel)
                .addGap(34, 34, 34)
                .addComponent(DropTablesButton)
                .addGap(18, 18, 18)
                .addComponent(CreateTablesButton)
                .addGap(18, 18, 18)
                .addComponent(PopulateTablesButton)
                .addGap(18, 18, 18)
                .addComponent(QueryTablesButton)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        PayrollAdminHomePage payrollScreen = new PayrollAdminHomePage();
        payrollScreen.show();

        dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void DropTablesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropTablesButtonActionPerformed
        // Drops one table at a time, if an SQL or other error occurs then the exception is caught and printed
        try {
            Statement stmt = MainClass.connection.createStatement();
            stmt.executeUpdate("DROP TABLE PAYSTUB_CALCULATED CASCADE CONSTRAINTS");
            stmt.executeUpdate("DROP TABLE PAYSTUB CASCADE CONSTRAINTS");
            stmt.executeUpdate("DROP TABLE TAX_BRACKET CASCADE CONSTRAINTS");
            stmt.executeUpdate("DROP TABLE EMPLOYEE CASCADE CONSTRAINTS");
            stmt.executeUpdate("DROP TABLE DEPARTMENT CASCADE CONSTRAINTS");
            JOptionPane.showMessageDialog(null, "Successfully DROPPED tables!");
        } catch (SQLException e) {
            System.out.print("Failed to Drop One or More tables: ");
            System.out.println(e.getErrorCode());
            e.printStackTrace();
        }
        catch (Exception e) {
            System.out.print("GENERAL Failed to Drop One or More tables: ");
            e.printStackTrace();
        }
    }//GEN-LAST:event_DropTablesButtonActionPerformed

    private void PopulateTablesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopulateTablesButtonActionPerformed
        try {
            Statement stmt = MainClass.connection.createStatement();
            stmt.executeUpdate("INSERT ALL\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (27, 'Customer Support', 4)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (28, 'Research and Development (RD)', 5)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (29, 'Product Management', 4)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (6, 'IT - Information Technology', 2)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (30, 'Legal Affairs', 3)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (31, 'Quality Assurance', 1)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (32, 'Operations', 1)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (33, 'Supply Chain Management', 1)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (34, 'Administration', 1)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (35, 'Public Relations (PR)', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (36, 'Facilities Management', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (37, 'Design and Creatives', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (38, 'Business Development', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (39, 'Project Management', 1)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (40, 'Training and Development', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (41, 'Accounting', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (42, 'Procurement', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (43, 'Engineering', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (44, 'Content Creation', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (45, 'IT - Compliance', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (46, 'Internal Audit', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (47, 'Event Management', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (48, 'Social Media', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (49, 'Sustainability', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (50, 'Data Analytics', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (1, 'Sales', 4)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (2, 'Marketing', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (3, 'Human Resources', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (4, 'Finance', 0)\n" +
                "    INTO DEPARTMENT (DEPARTMENT_ID, NAME, NUMBER_OF_EMPLOYEES) VALUES (5, 'Engineering 2', 1) SELECT * FROM dual");
            stmt.executeUpdate("INSERT ALL\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (1, 1, 'John', 'Doe', TO_DATE('1990-01-15','YYYY-MM-DD'), 123456789, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 60000, 20, 10, 15, 5, 10, 8, 'johndoe', 'password123', 123, 45678, 87654321, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (3, 39, 'Katarina', 'Rostova', TO_DATE('1970-11-20','YYYY-MM-DD'), 654321987, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 190000, 30, 20, 15, 5, 15, 10, 'katarinarostova', 'secure123', 234, 56789, 23456789, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (5, 5, 'Ivan', 'Stepanov', TO_DATE('1988-09-12','YYYY-MM-DD'), 567891234, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 70000, 18, 8, 14, 9, 8, 4, 'ivanstepanov', 'secret456', 345, 67890, 12345678, 1)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (6, 6, 'Tom', 'Keen', TO_DATE('1983-07-25','YYYY-MM-DD'), 987123456, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 72000, 20, 12, 18, 8, 9, 6, 'tomkeen', 'topsecret789', 456, 78901, 98765432, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (27, 27, 'Hans', 'Koehler', TO_DATE('1978-08-21','YYYY-MM-DD'), 234567890, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 82000, 22, 12, 16, 7, 9, 5, 'hanskoehler', 'pass67890', 567, 89012, 76543210, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (28, 28, 'Norman', 'Devane', TO_DATE('1980-05-14','YYYY-MM-DD'), 901234567, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 80000, 28, 16, 20, 10, 12, 7, 'normandevane', 'securepass67890', 678, 90123, 87654321, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (29, 29, 'LaBelle', 'Philomena', TO_DATE('1977-07-24','YYYY-MM-DD'), 234567891, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 77000, 25, 15, 18, 8, 11, 6, 'philomenalabelle', 'securepass123456', 789, 12345, 65432109, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (30, 30, 'Natalie', 'Luca', TO_DATE('1983-02-14','YYYY-MM-DD'), 901234566, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 81000, 22, 12, 16, 7, 9, 5, 'natalieluca', 'pass1234567', 890, 23456, 76543210, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (7, 28, 'Berlin', 'Fischer', TO_DATE('1981-09-08','YYYY-MM-DD'), 234567892, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 85000, 28, 14, 22, 10, 16, 9, 'berlinfischer', 'secret567', 901, 34567, 98765432, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (8, 29, 'Robert', 'Vesco', TO_DATE('1976-02-17','YYYY-MM-DD'), 345678901, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 95000, 30, 20, 18, 12, 11, 8, 'robertvesco', 'topsecret123', 123, 45678, 23456789, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (9, 1, 'Dembe', 'Zuma', TO_DATE('1970-08-12','YYYY-MM-DD'), 456789012, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 90000, 25, 15, 15, 5, 12, 7, 'dembezuma', 'confidential567', 234, 56789, 76543210, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (10, 1, 'Tom', 'Connolly', TO_DATE('1975-04-22','YYYY-MM-DD'), 567890123, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 88000, 28, 16, 20, 8, 14, 9, 'tomconnolly', 'topsecret7890', 345, 67890, 98765432, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (11, 27, 'Ian', 'Garvey', TO_DATE('1973-10-18','YYYY-MM-DD'), 678901234, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 82000, 22, 12, 18, 8, 10, 6, 'iangarvey', 'secure7890', 456, 78901, 65432109, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (12, 28, 'Alexander', 'Kirk', TO_DATE('1968-12-05','YYYY-MM-DD'), 789012345, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 95000, 30, 18, 20, 10, 12, 7, 'alexanderkirk', 'topsecret5678', 567, 89012, 87654321, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (15, 29, 'Sutton', 'Ross', TO_DATE('1972-08-28','YYYY-MM-DD'), 123456787, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 87000, 28, 14, 22, 10, 16, 8, 'suttonross', 'securepass123', 678, 90123, 23456789, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (18, 30, 'Zarak', 'Mosadek', TO_DATE('1978-06-22','YYYY-MM-DD'), 456789013, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 84000, 28, 16, 20, 10, 14, 8, 'zarakmosadek', 'secret5678', 789, 12345, 76543210, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (19, 28, 'Anna', 'Duerte', TO_DATE('1976-09-30','YYYY-MM-DD'), 567890124, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 92000, 30, 18, 22, 10, 16, 9, 'annaduerte', 'securepass1234', 890, 23456, 98765432, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (21, 1, 'Louis', 'Steinhil', TO_DATE('1980-01-08','YYYY-MM-DD'), 234567893, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 80000, 22, 12, 16, 7, 9, 5, 'louissteinhil', 'secret56789', 901, 34567, 65432109, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (22, 50, 'Dmitry', 'Rakitin', TO_DATE('1977-11-19','YYYY-MM-DD'), 345678902, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 87000, 28, 16, 20, 10, 12, 8, 'dmitryrakitin', 'pass567890', 123, 45678, 87654321, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (23, 27, 'Bogdan', 'Krilov', TO_DATE('1982-07-07','YYYY-MM-DD'), 901234565, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 80000, 25, 14, 18, 8, 11, 6, 'bogdankrilov', 'secret5678901', 234, 56789, 23456789, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (24, 50, 'Smokey', 'Putnum', TO_DATE('1975-03-17','YYYY-MM-DD'), 234567894, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 77000, 22, 12, 16, 7, 9, 5, 'smokeyputnum', 'pass12345', 345, 67890, 76543210, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (25, 27, 'Zal', 'Hasaan', TO_DATE('1984-10-28','YYYY-MM-DD'), 345678903, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 83000, 28, 16, 20, 10, 12, 7, 'zalbinhasaan', 'securepass12345', 456, 78901, 98765432, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (26, 28, 'Shahan', 'Navabi', TO_DATE('1979-12-07','YYYY-MM-DD'), 901234564, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 85000, 25, 15, 18, 8, 11, 6, 'shahannavabi', 'secret12345', 567, 89012, 65432109, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (2, 29, 'Elizabeth', 'Keen', TO_DATE('1985-05-03','YYYY-MM-DD'), 987654321, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 80000, 25, 15, 20, 10, 12, 8, 'elizabethkeen', 'hstenstnbsrnrsn', 678, 90123, 87654321, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (4, 6, 'Kate', 'Kaplan', TO_DATE('1980-03-15','YYYY-MM-DD'), 123456788, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 75000, 22, 10, 18, 7, 10, 5, 'katekaplan', 'srnssrtnsrtnsrtn', 789, 12345, 23456789, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (13, 30, 'Robert', 'Diaz', TO_DATE('1977-03-28','YYYY-MM-DD'), 890123456, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 90000, 28, 15, 20, 10, 12, 9, 'robertdiaz', 's6iirs6irij', 890, 23456, 76543210, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (16, 31, 'Susan', 'Hargrave', TO_DATE('1974-12-14','YYYY-MM-DD'), 234567895, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 86000, 30, 20, 20, 10, 14, 9, 'susanhargrave', 'sr6irjiyjsry6j', 901, 34567, 98765432, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (17, 32, 'Luther', 'Braxton', TO_DATE('1971-03-03','YYYY-MM-DD'), 345678904, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 89000, 25, 15, 18, 8, 12, 6, 'lutherbraxton', 'sr6isr6yu5tyhs', 123, 45678, 65432109, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (20, 33, 'Lawrence', 'Devlin', TO_DATE('1969-04-14','YYYY-MM-DD'), 901234563, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 91000, 25, 15, 18, 8, 10, 6, 'lawrencedevlin', 's6urhtsyh5tbbgdb', 234, 56789, 87654321, 0)\n" +
                "    INTO EMPLOYEE (EMPLOYEE_ID, DEPARTMENT_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, SIN_NUMBER, DATE_HIRED, PAYROLL_TYPE, SALARY, VAC_DAYS_TOTAL, VAC_DAYS_LEFT, SICK_DAYS_TOTAL, SICK_DAYS_LEFT, PERS_DAYS_TOTAL, PERS_DAYS_LEFT, USERNAME, PASSWORD, BANK_ID, BRANCH_NUMBER, ACCOUNT_NUMBER, IS_ADMIN) VALUES (14, 34, 'Anslo', 'Garrick', TO_DATE('1979-06-10','YYYY-MM-DD'), 901234562, TO_DATE('2023-10-03','YYYY-MM-DD'), 'Salary', 85000, 25, 15, 18, 8, 11, 1, 'anslogarrick', 'securepass567', 345, 67890, 23456789, 0) SELECT * FROM dual");
            stmt.executeUpdate("INSERT ALL\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (1, 2020, 'Federal', 0, 9999, 5)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (2, 2020, 'Federal', 10000, 19999, 10)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (3, 2020, 'Federal', 20000, 39999, 15)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (4, 2020, 'Federal', 40000, 69999, 20)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (5, 2020, 'Federal', 70000, 999999999, 25)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (6, 2020, 'Ontario', 0, 11999, 7)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (7, 2020, 'Ontario', 12000, 21999, 12)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (8, 2020, 'Ontario', 22000, 44999, 19)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (9, 2020, 'Ontario', 45000, 79999, 25)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (10, 2020, 'Ontario', 80000, 999999999, 30)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (11, 2021, 'Federal', 0, 9999, 5)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (12, 2021, 'Federal', 10000, 19999, 10)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (13, 2021, 'Federal', 20000, 39999, 15)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (14, 2021, 'Federal', 40000, 69999, 20)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (15, 2021, 'Federal', 70000, 999999999, 25)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (16, 2021, 'Ontario', 0, 11999, 7)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (17, 2021, 'Ontario', 12000, 21999, 12)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (18, 2021, 'Ontario', 22000, 44999, 19)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (19, 2021, 'Ontario', 45000, 79999, 25)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (20, 2021, 'Ontario', 80000, 999999999, 30)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (21, 2022, 'Federal', 0, 9999, 5)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (22, 2022, 'Federal', 10000, 19999, 10)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (23, 2022, 'Federal', 20000, 39999, 15)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (24, 2022, 'Federal', 40000, 69999, 20)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (25, 2022, 'Federal', 70000, 999999999, 25)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (26, 2022, 'Ontario', 0, 11999, 7)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (27, 2022, 'Ontario', 12000, 21999, 12)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (28, 2022, 'Ontario', 22000, 44999, 19)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (29, 2022, 'Ontario', 45000, 79999, 25)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (30, 2022, 'Ontario', 80000, 999999999, 30)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (31, 2023, 'Federal', 0, 9999, 5)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (32, 2023, 'Federal', 10000, 19999, 11)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (33, 2023, 'Federal', 20000, 39999, 16)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (34, 2023, 'Federal', 40000, 69999, 21)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (35, 2023, 'Federal', 70000, 999999999, 26)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (36, 2023, 'Ontario', 0, 11999, 6)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (37, 2023, 'Ontario', 12000, 21999, 13)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (38, 2023, 'Ontario', 22000, 44999, 21)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (39, 2023, 'Ontario', 45000, 79999, 27)\n" +
                "    INTO TAX_BRACKET (TB_ID, YEAR, REGION, LOWER_AMOUNT, UPPER_AMOUNT, TAX_RATE) VALUES (40, 2023, 'Ontario', 80000, 999999999, 33) SELECT * FROM dual");
            stmt.executeUpdate("INSERT ALL\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (1, 1, TO_DATE('2022-11-18','YYYY-MM-DD'), 2000, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (2, 1, TO_DATE('2022-12-02','YYYY-MM-DD'), 2000, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (3, 1, TO_DATE('2022-12-16','YYYY-MM-DD'), 2000, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (4, 1, TO_DATE('2022-12-30','YYYY-MM-DD'), 2500, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (5, 1, TO_DATE('2023-01-13','YYYY-MM-DD'), 2500, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (6, 1, TO_DATE('2023-01-27','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (7, 1, TO_DATE('2023-02-10','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (8, 1, TO_DATE('2023-02-24','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (9, 1, TO_DATE('2023-03-10','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (10, 1, TO_DATE('2023-03-24','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (11, 1, TO_DATE('2023-04-07','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (12, 1, TO_DATE('2023-04-21','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (13, 1, TO_DATE('2023-05-05','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (14, 1, TO_DATE('2023-05-19','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (15, 1, TO_DATE('2023-06-02','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (16, 1, TO_DATE('2023-06-16','YYYY-MM-DD'), 2600, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (17, 1, TO_DATE('2023-06-30','YYYY-MM-DD'), 2650, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (18, 1, TO_DATE('2023-07-14','YYYY-MM-DD'), 2650, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (19, 1, TO_DATE('2023-07-28','YYYY-MM-DD'), 2650, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (20, 1, TO_DATE('2023-08-11','YYYY-MM-DD'), 2650, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (21, 1, TO_DATE('2023-08-25','YYYY-MM-DD'), 2650, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (22, 1, TO_DATE('2023-09-08','YYYY-MM-DD'), 2650, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (23, 1, TO_DATE('2023-09-22','YYYY-MM-DD'), 2650, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (24, 1, TO_DATE('2023-10-06','YYYY-MM-DD'), 2650, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (25, 1, TO_DATE('2023-10-20','YYYY-MM-DD'), 2650, 40, 'Deposited')\n" +
                "    INTO PAYSTUB (PAYSTUB_ID, EMPLOYEE_ID, PAY_DATE, GROSS_AMOUNT, HOURS, STATUS) VALUES (26, 1, TO_DATE('2023-11-03','YYYY-MM-DD'), 2650, 40, 'Deposited') SELECT * FROM dual");
            stmt.executeUpdate("INSERT INTO PAYSTUB_CALCULATED (YEAR, GROSS_AMOUNT, TAX_FEDERAL, TAX_PROVINCIAL, CPP, EI, NET_AMOUNT)\n" +
                "SELECT\n" +
                "    EXTRACT(YEAR FROM MAX(p.pay_date)) AS year,\n" +
                "    p.gross_amount,\n" +
                "    ROUND(SUM(CASE WHEN tb.region = 'Federal' AND tb.LOWER_AMOUNT / 26 < p.gross_amount THEN\n" +
                "            ((p.gross_amount - tb.LOWER_AMOUNT / 26) * tb.TAX_RATE) / 100\n" +
                "        ELSE 0 END) / COUNT(*), 2) AS tax_federal,\n" +
                "    ROUND(SUM(CASE WHEN tb.region = 'Ontario' AND tb.LOWER_AMOUNT / 26 < p.gross_amount THEN\n" +
                "            ((p.gross_amount - tb.LOWER_AMOUNT / 26) * tb.TAX_RATE) / 100\n" +
                "        ELSE 0 END) / COUNT(*), 2) AS tax_provincial,\n" +
                "    ROUND(0.057 * GREATEST(p.gross_amount * 26, 61400) / 26, 2) AS cpp,\n" +
                "    ROUND(0.0158 * GREATEST(p.gross_amount * 26, 60300) / 26, 2) AS ei,\n" +
                "    ROUND(p.gross_amount -\n" +
                "        SUM(CASE WHEN tb.region = 'Federal' AND tb.LOWER_AMOUNT / 26 < p.gross_amount THEN\n" +
                "                ((p.gross_amount - tb.LOWER_AMOUNT / 26) * tb.TAX_RATE) / 100\n" +
                "            ELSE 0 END) / COUNT(*) -\n" +
                "        SUM(CASE WHEN tb.region = 'Ontario' AND tb.LOWER_AMOUNT / 26 < p.gross_amount THEN\n" +
                "                ((p.gross_amount - tb.LOWER_AMOUNT / 26) * tb.TAX_RATE) / 100\n" +
                "            ELSE 0 END) / COUNT(*) -\n" +
                "        ROUND(0.057 * GREATEST(p.gross_amount * 26, 61400) / 26, 2) -\n" +
                "        ROUND(0.0158 * GREATEST(p.gross_amount * 26, 60300) / 26, 2), 2) AS net_amount\n" +
                "FROM\n" +
                "    paystub p\n" +
                "JOIN\n" +
                "    tax_bracket tb ON EXTRACT(YEAR FROM p.pay_date) = tb.year\n" +
                "GROUP BY\n" +
                "    p.gross_amount");
            JOptionPane.showMessageDialog(null, "Successfully Populated tables!");
        } catch (SQLException e) {
            System.out.print("Failed to Populate One or More tables: ");
            System.out.println(e.getErrorCode());
            e.printStackTrace();
        }
        catch (Exception e) {
            System.out.print("GENERAL Failed to Populate One or More tables: ");
            e.printStackTrace();
        }
    }//GEN-LAST:event_PopulateTablesButtonActionPerformed

    private void CreateTablesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateTablesButtonActionPerformed
        try {
            Statement stmt = MainClass.connection.createStatement();
            stmt.executeUpdate("CREATE TABLE DEPARTMENT (\n" +
                "    DEPARTMENT_ID NUMBER NOT NULL,\n" +
                "    NAME VARCHAR2(40 BYTE) NOT NULL,\n" +
                "    NUMBER_OF_EMPLOYEES NUMBER NOT NULL,\n" +
                "    CONSTRAINT DEPARTMENT_PK PRIMARY KEY (DEPARTMENT_ID),\n" +
                "    CONSTRAINT DEPARTMENT_NAME_U UNIQUE (NAME)\n" +
                ")");
            stmt.executeUpdate("CREATE TABLE EMPLOYEE (\n" +
                "    EMPLOYEE_ID NUMBER NOT NULL,\n" +
                "    DEPARTMENT_ID NUMBER NOT NULL,\n" +
                "    FIRST_NAME VARCHAR2(20 BYTE) NOT NULL,\n" +
                "    LAST_NAME VARCHAR2(20 BYTE) NOT NULL,\n" +
                "    DATE_OF_BIRTH DATE,\n" +
                "    SIN_NUMBER NUMBER NOT NULL,\n" +
                "    DATE_HIRED DATE NOT NULL,\n" +
                "    PAYROLL_TYPE VARCHAR2(20 BYTE) NOT NULL,\n" +
                "    SALARY FLOAT(126) NOT NULL,\n" +
                "    VAC_DAYS_TOTAL NUMBER,\n" +
                "    VAC_DAYS_LEFT NUMBER,\n" +
                "    SICK_DAYS_TOTAL NUMBER,\n" +
                "    SICK_DAYS_LEFT NUMBER,\n" +
                "    PERS_DAYS_TOTAL NUMBER,\n" +
                "    PERS_DAYS_LEFT NUMBER,\n" +
                "    USERNAME VARCHAR2(20 BYTE) NOT NULL,\n" +
                "    PASSWORD VARCHAR2(20 BYTE) NOT NULL,\n" +
                "    BANK_ID NUMBER,\n" +
                "    BRANCH_NUMBER NUMBER,\n" +
                "    ACCOUNT_NUMBER NUMBER,\n" +
                "    IS_ADMIN NUMBER(1,0),\n" +
                "    CONSTRAINT EMPLOYEE_PK PRIMARY KEY (EMPLOYEE_ID),\n" +
                "    CONSTRAINT EMPLOYEE_SIN_CHECK CHECK (LENGTH(SIN_NUMBER) = 9),\n" +
                "    CONSTRAINT EMPLOYEE_SIN_U UNIQUE (SIN_NUMBER),\n" +
                "    CONSTRAINT EMPLOYEE_USERNAME_U UNIQUE (USERNAME),\n" +
                "    CONSTRAINT EMPLOYEE_PASSWORD_CHECK CHECK (LENGTHB(PASSWORD) > 8),\n" +
                "    CONSTRAINT EMPLOYEE_DEPARTMENT_FK FOREIGN KEY (DEPARTMENT_ID)\n" +
                "        REFERENCES DEPARTMENT (DEPARTMENT_ID)\n" +
                ")");
            stmt.executeUpdate("CREATE TABLE TAX_BRACKET (\n" +
                "    TB_ID NUMBER NOT NULL,\n" +
                "    YEAR NUMBER NOT NULL,\n" +
                "    REGION VARCHAR2(20 BYTE) NOT NULL,\n" +
                "    LOWER_AMOUNT NUMBER NOT NULL,\n" +
                "    UPPER_AMOUNT NUMBER NOT NULL,\n" +
                "    TAX_RATE NUMBER NOT NULL,\n" +
                "    CONSTRAINT TAX_BRACKET_PK PRIMARY KEY (TB_ID)\n" +
                ")");
            stmt.executeUpdate("CREATE TABLE PAYSTUB (\n" +
                "    PAYSTUB_ID NUMBER NOT NULL,\n" +
                "    EMPLOYEE_ID NUMBER NOT NULL,\n" +
                "    PAY_DATE DATE NOT NULL,\n" +
                "    GROSS_AMOUNT FLOAT(126) NOT NULL,\n" +
                "    HOURS FLOAT(126) NOT NULL,\n" +
                "    STATUS VARCHAR2(20 BYTE) NOT NULL,\n" +
                "    CONSTRAINT PAYSTUB_PK PRIMARY KEY (PAYSTUB_ID),\n" +
                "    CONSTRAINT PAYSTUB_FK_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID)\n" +
                "        REFERENCES EMPLOYEE (EMPLOYEE_ID)\n" +
                ")");
            stmt.executeUpdate("CREATE TABLE PAYSTUB_CALCULATED (\n" +
                "    YEAR NUMBER, \n" +
                "	GROSS_AMOUNT FLOAT(126), \n" +
                "	TAX_FEDERAL FLOAT(126), \n" +
                "	TAX_PROVINCIAL FLOAT(126),\n" +
                "    CPP FLOAT(126) NOT NULL,\n" +
                "    EI FLOAT(126) NOT NULL,\n" +
                "    NET_AMOUNT FLOAT(126) NOT NULL,\n" +
                "    CONSTRAINT PAYSTUB_CALCULATED_PK PRIMARY KEY (YEAR, GROSS_AMOUNT)\n" +
                ")");
            JOptionPane.showMessageDialog(null, "Successfully CREATED tables!");
        } catch (SQLException e) {
            System.out.print("Failed to Create One or More tables: ");
            System.out.println(e.getErrorCode());
            e.printStackTrace();
        }
        catch (Exception e) {
            System.out.print("GENERAL Failed to Create One or More tables: ");
            e.printStackTrace();
        }
    }//GEN-LAST:event_CreateTablesButtonActionPerformed

    private void QueryTablesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QueryTablesButtonActionPerformed
        // To Do
    }//GEN-LAST:event_QueryTablesButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseOperationsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseOperationsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseOperationsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseOperationsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseOperationsPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton CreateTablesButton;
    private javax.swing.JButton DropTablesButton;
    private javax.swing.JButton PopulateTablesButton;
    private javax.swing.JButton QueryTablesButton;
    private javax.swing.JLabel TitleLabel;
    // End of variables declaration//GEN-END:variables
}
